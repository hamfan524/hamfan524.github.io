{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/Refactorings","result":{"pageContext":{"currentCategory":"Refactorings","categories":["All","Refactorings","Projects","activities"],"edges":[{"node":{"id":"3ab39e14-e2f6-5a51-8d65-205f011f4e4b","excerpt":"❗️개요 노션 링크 파도를 배포한 뒤, 제일 먼저 진행한 리팩토링에 대해 다루려고 한다.\n우린 최대한 출시 일을 앞당기기 위해 기능 만들기에 급급해서 유지보수를 하기 좋은 코드로 개발을 하지 못하였던걸 인지하고 있었고, 배포가 끝난 뒤 바로 리팩토링을 진행하였다. 🐞 문제 정의 우선 우리끼리 먼저 현재 파도 프로젝트에서의 문제점을 찾아 정리하였다. 개선해야할 방향도 정리하여 리팩토링 작업을 시작하였고, 우리가 생각하지 못한 부분들에 대해 조언을 받기 위해 개발자 그린님께 찾아가여 따로 멘토링을 받았다. 🍏 그린님 멘토링 사항 우리는 먼저 앱과 코드들을 보여드렸고, 그리님께서 코드를 며칠동안 보시고 조언해주신 내용들을 정리하였다. Dead 코드 정리 햅틱헬퍼 싱글톤 파일 따로 분리 의존성 주입 또는 싱글톤 아닌 방법을 고려 .onAppear 안에서 Task로 비동기 처리 → .task{ }라는 모디파이어 적용하는걸 추천 둘 다 기능은 같으나 비동기 처리만 따로 빼서 처리하는걸 추천 대…","fields":{"slug":"/PadoRefactor/"},"frontmatter":{"categories":"Refactorings","title":"파도 리팩토링 회고","date":"April 16, 2024"}},"next":{"fields":{"slug":"/Pado/"}},"previous":null}]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}